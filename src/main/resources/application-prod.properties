#server.servlet.context-path=/prod
#配置端口号
server.port=8080
#配置thymeleaf模板不缓存
spring.thymeleaf.cache=false

#配置数据源
spring.datasource.url=jdbc:mysql://47.105.104.197:3306/springbootVue?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
spring.datasource.password=123456
spring.datasource.username=root

#===================================jpa===========================================
spring.jpa.hibernate.ddl-auto=update
# 输出日志
spring.jpa.show-sql=true
# 数据库类型
spring.jpa.database=mysql
#===================================mybatis===========================================
# 注意注意
mybatis.mapper-locations=classpath:com/ztt/test/mapper/*.xml
#mybatis.mapper-locations=classpath:mapper/*.xml        #这种方式需要自己在resources目录下创建mapper目录然后存放xml
mybatis.type-aliases-package=com.ztt.test.entity
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
mybatis.configuration.map-underscore-to-camel-case=true
# 如果想看到mybatis日志需要做如下配置
#logging.level.com.ztt.test=DEBUG
########## 通用Mapper ##########
# 主键自增回写方法,默认值MYSQL,详细说明请看文档
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.BaseMapper
# 设置 insert 和 update 中，是否判断字符串类型!=''
mapper.not-empty=true
# 枚举按简单类型处理,如果有枚举字段则需要加上该配置才会做映射
mapper.enum-as-simple-type=true
########## 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql

# 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
# pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=false
#支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，
#自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true

#===================================rdeis===========================================
spring.redis.host=47.105.104.197
# Redis服务器端口
spring.redis.port=6379
# Redis服务器的密码 
#spring.redis.password=

# 一般来说是不用配置的，Spring Cache 会根据依赖的包自行装配
#但先后顺序会对Redis使用有影响（JCache -> EhCache -> Redis -> Guava
spring.cache.type=redis
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

#=================================swagger配置=============================================
# 扫描的包路径,默认扫描所有
spring.swagger.base-package=com.ztt.test
# 默认为 true（是否开启）
spring.swagger.enabled=true
#================================rabbitmq====================================
spring.rabbitmq.username=rabbitmq
spring.rabbitmq.password=123456
spring.rabbitmq.host=47.105.104.197
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/
# 手动ACK 不开启自动ACK模式,目的是防止报错后未正确处理消息丢失 默认 为 none
#spring.rabbitmq.listener.simple.acknowledge-mode=manual

#================================actuator=================================
# 描述信息
info.blog-url=http://blog.ztt.com
info.author=ztt
# 如果 Maven 插件没配置此处请注释掉
info.version=@project.version@
info.name=@project.artifactId@

# 加载所有的端点/默认只加载了 info / health,这里配置加载所有
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# 可以关闭制定的端点
management.endpoint.shutdown.enabled=false

# 路径映射，将 health 路径映射成 rest_health 那么在访问 health 路径将为404，因为原路径已经变成 rest_health 了，一般情况下不建议使用
# management.endpoints.web.path-mapping.health=rest_health
########## Spring Boot Admin ##########
# 日志文件
logging.file=./target/admin-server.log
# 比较重要,默认 路径/actuator/endpointId 这样一来spring-boot-admin 扫描不到，故添加配置
management.endpoints.web.base-path=/
spring.boot.admin.client.url=http://localhost:8080
# 不配置老喜欢用主机名，看着不舒服....
spring.boot.admin.client.instance.prefer-ip=true

# 选择激活对应环境的配置，如果是dev则代表不用认证就能访问监控页，prod代表需要认证
spring.profiles.active=prod

# 登陆所需的账号密码
spring.security.user.name=ztt
spring.security.user.password=ztt
# 便于客户端可以在受保护的服务器上注册api
spring.boot.admin.client.username=ztt
spring.boot.admin.client.password=ztt
# 便服务器可以访问受保护的客户端端点
spring.boot.admin.client.instance.metadata.user.name=ztt
spring.boot.admin.client.instance.metadata.user.password=ztt











